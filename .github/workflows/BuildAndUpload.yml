name: Build .NET Desktop App

on:
  push:
    branches:
      - develop
  pull_request:
    branches:
      - develop

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest, macos-arm64-latest]
        include:
          - os: windows-latest
            platform: Windows
          - os: ubuntu-latest
            platform: Linux
          - os: macos-latest
            platform: macOS
          - os: macos-arm64-latest
            platform: macOS-arm64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '7.0.x'

    - name: Get version from .csproj and append build number
      id: get_version
      shell: pwsh
      run: |
        $csprojPath = 'EndlessRealms.Gui\EndlessRealms.Gui.csproj'
        $csprojContent = Get-Content -Path $csprojPath
        $versionPattern = '<Version>(.*)<\/Version>'
        $version = ($csprojContent -join "`n") -match $versionPattern -replace $versionPattern, '$1'
        $versionWithBuildNumber = "$version.${env:GITHUB_RUN_NUMBER}"
        echo "Version with build number is $versionWithBuildNumber"
        echo "::set-output name=version_with_build_number::$versionWithBuildNumber"

    - name: Build and publish
       run: dotnet publish EndlessRealms.Gui/EndlessRealms.Gui.csproj -c Release -o publish --no-self-contained --runtime ${{ matrix.os == 'windows-latest' && 'win-x64' || matrix.os == 'ubuntu-latest' && 'linux-x64' || matrix.os == 'macos-latest' && 'osx-x64' || matrix.os == 'macos-arm64-latest' && 'osx-arm64' }}

    - name: Zip publish folder
      run: |
        $zipFileName = "EndlessRealms.${{ steps.get_version.outputs.version_with_build_number }}.${{ matrix.platform }}.zip"
        if ($env:RUNNER_OS -eq "Windows") {
          Compress-Archive -Path publish\* -DestinationPath $zipFileName
        } else {
          zip -r $zipFileName publish/
        }
        echo "ZipFileName=$zipFileName" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: ${{ env.ZipFileName }}
        path: ${{ env.ZipFileName }}
